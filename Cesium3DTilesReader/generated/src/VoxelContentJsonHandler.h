// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "PropertyTableJsonHandler.h"
#include "VoxelBufferJsonHandler.h"
#include "VoxelBufferViewJsonHandler.h"

#include <Cesium3DTiles/VoxelContent.h>
#include <CesiumJsonReader/ArrayJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>

namespace CesiumJsonReader {
class JsonReaderOptions;
} // namespace CesiumJsonReader

namespace Cesium3DTilesReader {
class VoxelContentJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType = Cesium3DTiles::VoxelContent;

  explicit VoxelContentJsonHandler(
      const CesiumJsonReader::JsonReaderOptions& options) noexcept;
  void
  reset(IJsonHandler* pParentHandler, Cesium3DTiles::VoxelContent* pObject);

  IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyVoxelContent(
      const std::string& objectType,
      const std::string_view& str,
      Cesium3DTiles::VoxelContent& o);

private:
  Cesium3DTiles::VoxelContent* _pObject = nullptr;
  CesiumJsonReader::
      ArrayJsonHandler<Cesium3DTiles::VoxelBuffer, VoxelBufferJsonHandler>
          _buffers;
  CesiumJsonReader::ArrayJsonHandler<
      Cesium3DTiles::VoxelBufferView,
      VoxelBufferViewJsonHandler>
      _bufferViews;
  CesiumJsonReader::
      ArrayJsonHandler<Cesium3DTiles::PropertyTable, PropertyTableJsonHandler>
          _propertyTables;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _voxelTable;
};
} // namespace Cesium3DTilesReader
