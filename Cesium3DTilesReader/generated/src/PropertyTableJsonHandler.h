// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "PropertyTablePropertyJsonHandler.h"

#include <Cesium3DTiles/PropertyTable.h>
#include <CesiumJsonReader/DictionaryJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>
#include <CesiumJsonReader/StringJsonHandler.h>

namespace CesiumJsonReader {
class ExtensionReaderContext;
}

namespace Cesium3DTilesReader {
class PropertyTableJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType = Cesium3DTiles::PropertyTable;

  PropertyTableJsonHandler(
      const CesiumJsonReader::ExtensionReaderContext& context) noexcept;
  void
  reset(IJsonHandler* pParentHandler, Cesium3DTiles::PropertyTable* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyPropertyTable(
      const std::string& objectType,
      const std::string_view& str,
      Cesium3DTiles::PropertyTable& o);

private:
  Cesium3DTiles::PropertyTable* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _name;
  CesiumJsonReader::StringJsonHandler _classProperty;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _count;
  CesiumJsonReader::DictionaryJsonHandler<
      Cesium3DTiles::PropertyTableProperty,
      PropertyTablePropertyJsonHandler>
      _properties;
};
} // namespace Cesium3DTilesReader
