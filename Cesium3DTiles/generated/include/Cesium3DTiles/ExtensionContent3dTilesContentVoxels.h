// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <Cesium3DTiles/Library.h>
#include <Cesium3DTiles/Padding.h>
#include <CesiumUtility/ExtensibleObject.h>

#include <cstdint>
#include <optional>
#include <string>
#include <vector>

namespace Cesium3DTiles {
/**
 * @brief Voxel content type.
 */
struct CESIUM3DTILES_API ExtensionContent3dTilesContentVoxels final
    : public CesiumUtility::ExtensibleObject {
  /**
   * @brief The original name of this type.
   */
  static constexpr const char* TypeName =
      "ExtensionContent3dTilesContentVoxels";
  /** @brief The official name of the extension. This should be the same as its
   * key in the `extensions` object. */
  static constexpr const char* ExtensionName = "3DTILES_content_voxels";

  /**
   * @brief Dimensions of the voxel grid. x/y/z for a box, r/z/theta for a
   * cylinder, lon/lat/height for an ellipsoid.
   */
  std::vector<int64_t> dimensions;

  /**
   * @brief padding
   */
  std::optional<Cesium3DTiles::Padding> padding;

  /**
   * @brief The class that property values conform to. The value shall be a
   * class ID declared in the `classes` dictionary.
   */
  std::string classProperty;

  /**
   * @brief Calculates the size in bytes of this object, including the contents
   * of all collections, pointers, and strings. This will NOT include the size
   * of any extensions attached to the object. Calling this method may be slow
   * as it requires traversing the object's entire structure.
   */
  int64_t getSizeBytes() const {
    int64_t accum = 0;
    accum += int64_t(sizeof(ExtensionContent3dTilesContentVoxels));
    accum += CesiumUtility::ExtensibleObject::getSizeBytes() -
             int64_t(sizeof(CesiumUtility::ExtensibleObject));
    accum += int64_t(sizeof(int64_t) * this->dimensions.capacity());
    if (this->padding) {
      accum += this->padding->getSizeBytes() -
               int64_t(sizeof(Cesium3DTiles::Padding));
    }
    accum += int64_t(this->classProperty.capacity() * sizeof(char));
    return accum;
  }
};
} // namespace Cesium3DTiles
