// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <Cesium3DTiles/Library.h>
#include <CesiumUtility/ExtensibleObject.h>

namespace Cesium3DTiles {
/**
 * @brief A dictionary object of metadata about per-feature properties.
 */
struct CESIUM3DTILES_API Properties final
    : public CesiumUtility::ExtensibleObject {
  /**
   * @brief The original name of this type.
   */
  static constexpr const char* TypeName = "Properties";

  /**
   * @brief The maximum value of this property of all the features in the
   * tileset. The maximum value shall not be smaller than the minimum value.
   */
  double maximum = double();

  /**
   * @brief The minimum value of this property of all the features in the
   * tileset. The maximum value shall not be smaller than the minimum value.
   */
  double minimum = double();

  /**
   * @brief Calculates the size in bytes of this object, including the contents
   * of all collections, pointers, and strings. This will NOT include the size
   * of any extensions attached to the object. Calling this method may be slow
   * as it requires traversing the object's entire structure.
   */
  int64_t getSizeBytes() const {
    int64_t accum = 0;
    accum += int64_t(sizeof(Properties));
    accum += CesiumUtility::ExtensibleObject::getSizeBytes() -
             int64_t(sizeof(CesiumUtility::ExtensibleObject));

    return accum;
  }
};
} // namespace Cesium3DTiles
