// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/ExtensionNodeMaxarMeshVariantsMappingsValue.h"
#include "CesiumGltf/Library.h"

#include <CesiumUtility/ExtensibleObject.h>

#include <vector>

namespace CesiumGltf {
/**
 * @brief MAXAR_mesh_variants node extension
 */
struct CESIUMGLTF_API ExtensionNodeMaxarMeshVariants final
    : public CesiumUtility::ExtensibleObject {
  static inline constexpr const char* TypeName =
      "ExtensionNodeMaxarMeshVariants";
  static inline constexpr const char* ExtensionName = "MAXAR_mesh_variants";

  /**
   * @brief A list of mesh to variant mappings
   */
  std::vector<CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue> mappings;

  int64_t getSizeBytes() const {
    int64_t accum = 0;
    accum += sizeof(ExtensionNodeMaxarMeshVariants);
    for (const CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue& value :
         this->mappings) {
      accum += value.getSizeBytes() -
               sizeof(CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue);
    }
    return accum;
  }
};
} // namespace CesiumGltf
