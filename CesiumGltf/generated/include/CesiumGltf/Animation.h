// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/AnimationChannel.h"
#include "CesiumGltf/AnimationSampler.h"
#include "CesiumGltf/Library.h"
#include "CesiumGltf/NamedObject.h"

#include <vector>

namespace CesiumGltf {
/**
 * @brief A keyframe animation.
 */
struct CESIUMGLTF_API Animation final : public CesiumGltf::NamedObject {
  static inline constexpr const char* TypeName = "Animation";

  /**
   * @brief An array of animation channels. An animation channel combines an
   * animation sampler with a target property being animated. Different channels
   * of the same animation **MUST NOT** have the same targets.
   */
  std::vector<CesiumGltf::AnimationChannel> channels;

  /**
   * @brief An array of animation samplers. An animation sampler combines
   * timestamps with a sequence of output values and defines an interpolation
   * algorithm.
   */
  std::vector<CesiumGltf::AnimationSampler> samplers;

  int64_t getSizeBytes() const {
    int64_t accum = 0;
    accum += sizeof(Animation);
    for (const CesiumGltf::AnimationChannel& value : this->channels) {
      accum += value.getSizeBytes() - sizeof(CesiumGltf::AnimationChannel);
    }
    for (const CesiumGltf::AnimationSampler& value : this->samplers) {
      accum += value.getSizeBytes() - sizeof(CesiumGltf::AnimationSampler);
    }
    return accum;
  }
};
} // namespace CesiumGltf
