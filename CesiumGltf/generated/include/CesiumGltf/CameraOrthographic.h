// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/Library.h"

#include <CesiumUtility/ExtensibleObject.h>

namespace CesiumGltf {
/**
 * @brief An orthographic camera containing properties to create an orthographic
 * projection matrix.
 */
struct CESIUMGLTF_API CameraOrthographic final
    : public CesiumUtility::ExtensibleObject {
  static inline constexpr const char* TypeName = "CameraOrthographic";

  /**
   * @brief The floating-point horizontal magnification of the view. This value
   * **MUST NOT** be equal to zero. This value **SHOULD NOT** be negative.
   */
  double xmag = double();

  /**
   * @brief The floating-point vertical magnification of the view. This value
   * **MUST NOT** be equal to zero. This value **SHOULD NOT** be negative.
   */
  double ymag = double();

  /**
   * @brief The floating-point distance to the far clipping plane. This value
   * **MUST NOT** be equal to zero. `zfar` **MUST** be greater than `znear`.
   */
  double zfar = double();

  /**
   * @brief The floating-point distance to the near clipping plane.
   */
  double znear = double();

  int64_t getSizeBytes() const {
    int64_t accum = 0;
    accum += sizeof(this->xmag);
    accum += sizeof(this->ymag);
    accum += sizeof(this->zfar);
    accum += sizeof(this->znear);
    return accum;
  }
};
} // namespace CesiumGltf
