// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/Library.h"

#include <CesiumUtility/ExtensibleObject.h>

#include <cstdint>
#include <optional>
#include <string>
#include <vector>

namespace CesiumGltf {
/**
 * @brief ExtensionNodeMaxarMeshVariants Mappings Value
 */
struct CESIUMGLTF_API ExtensionNodeMaxarMeshVariantsMappingsValue final
    : public CesiumUtility::ExtensibleObject {
  static inline constexpr const char* TypeName =
      "ExtensionNodeMaxarMeshVariantsMappingsValue";

  /**
   * @brief An array of variant index values.
   */
  std::vector<int32_t> variants;

  /**
   * @brief The mesh associated with the set of variants.
   */
  int32_t mesh = -1;

  /**
   * @brief The user-defined name of this variant mesh mapping.
   */
  std::optional<std::string> name;

  int64_t getSizeBytes() const {
    int64_t accum = 0;
    for (const int32_t& value : this->variants) {
      accum += sizeof(value);
    }
    accum += sizeof(this->mesh);
    accum +=
        sizeof(this->name) + (this->name.has_value() ? this->name->size() : 0);
    return accum;
  }
};
} // namespace CesiumGltf
