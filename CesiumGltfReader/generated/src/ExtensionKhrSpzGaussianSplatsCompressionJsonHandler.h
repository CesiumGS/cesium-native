// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/ExtensionKhrSpzGaussianSplatsCompression.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>

namespace CesiumJsonReader {
  class JsonReaderOptions;
}

namespace CesiumGltfReader {
  class ExtensionKhrSpzGaussianSplatsCompressionJsonHandler : public CesiumJsonReader::ExtensibleObjectJsonHandler, public CesiumJsonReader::IExtensionJsonHandler {
  public:
    using ValueType = CesiumGltf::ExtensionKhrSpzGaussianSplatsCompression;

    static inline constexpr const char* ExtensionName = "KHR_spz_gaussian_splats_compression";

    ExtensionKhrSpzGaussianSplatsCompressionJsonHandler(const CesiumJsonReader::JsonReaderOptions& options) noexcept;
    void reset(IJsonHandler* pParentHandler, CesiumGltf::ExtensionKhrSpzGaussianSplatsCompression* pObject);

    virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

    virtual void reset(IJsonHandler* pParentHandler, CesiumUtility::ExtensibleObject& o, const std::string_view& extensionName) override;

    virtual IJsonHandler& getHandler() override { return *this; }

  protected:
    IJsonHandler* readObjectKeyExtensionKhrSpzGaussianSplatsCompression(const std::string& objectType, const std::string_view& str, CesiumGltf::ExtensionKhrSpzGaussianSplatsCompression& o);

  private:

    CesiumGltf::ExtensionKhrSpzGaussianSplatsCompression* _pObject = nullptr;
    CesiumJsonReader::IntegerJsonHandler<int32_t> _bufferView;
  };
}
