// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/AccessorSparseIndices.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>

namespace CesiumJsonReader {
  class JsonReaderOptions;
} // namespace CesiumJsonReader

namespace CesiumGltfReader {
  class AccessorSparseIndicesJsonHandler : public CesiumJsonReader::ExtensibleObjectJsonHandler {
  public:
    using ValueType = CesiumGltf::AccessorSparseIndices;

    explicit AccessorSparseIndicesJsonHandler(const CesiumJsonReader::JsonReaderOptions& options) noexcept;
    void reset(IJsonHandler* pParentHandler, CesiumGltf::AccessorSparseIndices* pObject);

    IJsonHandler* readObjectKey(const std::string_view& str) override;

  protected:
    IJsonHandler* readObjectKeyAccessorSparseIndices(const std::string& objectType, const std::string_view& str, CesiumGltf::AccessorSparseIndices& o);

  private:

    CesiumGltf::AccessorSparseIndices* _pObject = nullptr;
    CesiumJsonReader::IntegerJsonHandler<int32_t> _bufferView;
    CesiumJsonReader::IntegerJsonHandler<int64_t> _byteOffset;
    CesiumJsonReader::IntegerJsonHandler<int32_t> _componentType;
  };
}  // namespace CesiumGltfReader
