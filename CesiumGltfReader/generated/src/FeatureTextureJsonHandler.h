// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "TextureAccessorJsonHandler.h"

#include <CesiumGltf/FeatureTexture.h>
#include <CesiumJsonReader/DictionaryJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/StringJsonHandler.h>

namespace CesiumJsonReader {
class ExtensionReaderContext;
}

namespace CesiumGltfReader {
class FeatureTextureJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType = CesiumGltf::FeatureTexture;

  FeatureTextureJsonHandler(
      const CesiumJsonReader::ExtensionReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, CesiumGltf::FeatureTexture* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyFeatureTexture(
      const std::string& objectType,
      const std::string_view& str,
      CesiumGltf::FeatureTexture& o);

private:
  CesiumGltf::FeatureTexture* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _classProperty;
  CesiumJsonReader::DictionaryJsonHandler<
      CesiumGltf::TextureAccessor,
      TextureAccessorJsonHandler>
      _properties;
};
} // namespace CesiumGltfReader
