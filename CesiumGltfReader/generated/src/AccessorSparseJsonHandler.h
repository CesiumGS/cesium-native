// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "AccessorSparseIndicesJsonHandler.h"
#include "AccessorSparseValuesJsonHandler.h"

#include <CesiumGltf/AccessorSparse.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>

namespace CesiumJsonReader {
class ExtensionReaderContext;
}

namespace CesiumGltfReader {
class AccessorSparseJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType = CesiumGltf::AccessorSparse;

  AccessorSparseJsonHandler(
      const CesiumJsonReader::ExtensionReaderContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, CesiumGltf::AccessorSparse* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyAccessorSparse(
      const std::string& objectType,
      const std::string_view& str,
      CesiumGltf::AccessorSparse& o);

private:
  CesiumGltf::AccessorSparse* _pObject = nullptr;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _count;
  AccessorSparseIndicesJsonHandler _indices;
  AccessorSparseValuesJsonHandler _values;
};
} // namespace CesiumGltfReader
