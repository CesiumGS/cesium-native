// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "PaddingJsonHandler.h"

#include <CesiumGltf/ExtensionExtPrimitiveVoxels.h>
#include <CesiumJsonReader/ArrayJsonHandler.h>
#include <CesiumJsonReader/DictionaryJsonHandler.h>
#include <CesiumJsonReader/DoubleJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>

namespace CesiumJsonReader {
class JsonReaderOptions;
} // namespace CesiumJsonReader

namespace CesiumGltfReader {
class ExtensionExtPrimitiveVoxelsJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler,
      public CesiumJsonReader::IExtensionJsonHandler {
public:
  using ValueType = CesiumGltf::ExtensionExtPrimitiveVoxels;

  static constexpr const char* ExtensionName = "EXT_primitive_voxels";

  explicit ExtensionExtPrimitiveVoxelsJsonHandler(
      const CesiumJsonReader::JsonReaderOptions& options) noexcept;
  void reset(
      IJsonHandler* pParentHandler,
      CesiumGltf::ExtensionExtPrimitiveVoxels* pObject);

  IJsonHandler* readObjectKey(const std::string_view& str) override;

  void reset(
      IJsonHandler* pParentHandler,
      CesiumUtility::ExtensibleObject& o,
      const std::string_view& extensionName) override;

  IJsonHandler& getHandler() override { return *this; }

protected:
  IJsonHandler* readObjectKeyExtensionExtPrimitiveVoxels(
      const std::string& objectType,
      const std::string_view& str,
      CesiumGltf::ExtensionExtPrimitiveVoxels& o);

private:
  CesiumGltf::ExtensionExtPrimitiveVoxels* _pObject = nullptr;
  CesiumJsonReader::IntegerJsonHandler<int32_t> _shape;
  CesiumJsonReader::
      ArrayJsonHandler<int64_t, CesiumJsonReader::IntegerJsonHandler<int64_t>>
          _dimensions;
  PaddingJsonHandler _padding;
  CesiumJsonReader::DictionaryJsonHandler<
      std::vector<double>,
      CesiumJsonReader::
          ArrayJsonHandler<double, CesiumJsonReader::DoubleJsonHandler>>
      _noData;
};
} // namespace CesiumGltfReader
