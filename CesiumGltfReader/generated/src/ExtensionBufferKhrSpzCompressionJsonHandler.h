// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/ExtensionBufferKhrSpzCompression.h>
#include <CesiumJsonReader/BoolJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>

namespace CesiumJsonReader {
  class JsonReaderOptions;
}

namespace CesiumGltfReader {
  class ExtensionBufferKhrSpzCompressionJsonHandler : public CesiumJsonReader::ExtensibleObjectJsonHandler, public CesiumJsonReader::IExtensionJsonHandler {
  public:
    using ValueType = CesiumGltf::ExtensionBufferKhrSpzCompression;

    static inline constexpr const char* ExtensionName = "KHR_spz_compression";

    ExtensionBufferKhrSpzCompressionJsonHandler(const CesiumJsonReader::JsonReaderOptions& options) noexcept;
    void reset(IJsonHandler* pParentHandler, CesiumGltf::ExtensionBufferKhrSpzCompression* pObject);

    virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

    virtual void reset(IJsonHandler* pParentHandler, CesiumUtility::ExtensibleObject& o, const std::string_view& extensionName) override;

    virtual IJsonHandler& getHandler() override { return *this; }

  protected:
    IJsonHandler* readObjectKeyExtensionBufferKhrSpzCompression(const std::string& objectType, const std::string_view& str, CesiumGltf::ExtensionBufferKhrSpzCompression& o);

  private:

    CesiumGltf::ExtensionBufferKhrSpzCompression* _pObject = nullptr;
    CesiumJsonReader::BoolJsonHandler _fallback;
  };
}
