trigger: none
pr: none

parameters:
  - name: PackageVersion
    type: string
  - name: LinuxBuild
    displayName: Linux build
    type: boolean
    default: true
  - name: WindowsBuild
    displayName: Windows build
    type: boolean
    default: false

jobs:
  - job:
    displayName: Publish cesium-native on Linux
    condition: eq('${{parameters.LinuxBuild}}', true)
    pool:
      name: iModelTechLnxDeb11
      demands: "Agent.OS -equals Linux"
    steps:
      - checkout: self
        lfs: true
        submodules: recursive
        persistCredentials: true

      - task: ExtractFiles@1
        displayName: 'Extract cmake executable'
        inputs:
          archiveFilePatterns: "tools/cmake-linux.zip"
          destinationFolder: "tools"
          cleanDestinationFolder: false

      - script: chmod +x tools/cmake-linux/bin/cmake      
        displayName: 'chmod +x on cmake executable'

      - script: tools/cmake-linux/bin/cmake -S $(Build.SourcesDirectory) -B $(Build.SourcesDirectory)/out -D CMAKE_C_COMPILER=/usr/lib/llvm-13/bin/clang -D CMAKE_CXX_COMPILER=/usr/lib/llvm-13/bin/clang++        
        displayName: 'Generate cmake project'

      - script: tools/cmake-linux/bin/cmake --build $(Build.SourcesDirectory)/out --target CesiumGltfWriter --config Release
        displayName: 'Build CesiumGltfWriter target'

      - template: copy-include-files.yml 

      - task: CopyFiles@2
        displayName: 'Copy CesiumGltfWriter lib to upack staging directory'
        inputs:
          SourceFolder: "out/CesiumGltfWriter"
          Contents: "*.a"
          TargetFolder: upack-staging/lib

      - task: CopyFiles@2
        displayName: 'Copy CesiumJsonWriter lib to upack staging directory'
        inputs:
          SourceFolder: "out/CesiumJsonWriter"
          Contents: "*.a"
          TargetFolder: upack-staging/lib

      # Uncomment this task for testing without having to publish to upack feed
      # - task: PublishPipelineArtifact@1
      #   inputs:
      #     targetPath: 'upack-staging'
      #     artifactName: 'cesium-native_x64_linux'

      - task: UniversalPackages@0
        inputs:
          command: "publish"
          publishDirectory: "upack-staging"
          feedsToUsePublish: "internal"
          vstsFeedPublish: "upack"
          vstsFeedPackagePublish: "cesium_native_x64_linux"
          versionOption: "custom"
          versionPublish: ${{parameters.PackageVersion}}
        env:
          AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

  - job:
    displayName: Publish cesium-native on Windows
    condition: eq('${{parameters.WindowsBuild}}', true)
    pool:
      vmImage: "windows-2019"
    steps:
      - checkout: self
        lfs: true
        submodules: recursive
        persistCredentials: true

      - task: CMake@1
        displayName: 'Generate cmake project'
        inputs:
          cmakeArgs: -S $(Build.SourcesDirectory) -B $(Build.SourcesDirectory)/out -G "Visual Studio 16 2019"

      - task: CMake@1
        displayName: 'Build CesiumGltfWriter target'
        inputs:
          cmakeArgs: --build $(Build.SourcesDirectory)/out --target CesiumGltfWriter --config Release
      
      - template: copy-include-files.yml 

      - task: CopyFiles@2
        displayName: 'Copy CesiumGltfWriter lib to upack staging directory'
        inputs:
          SourceFolder: "out/CesiumGltfWriter/Release"
          Contents: "*.lib"
          TargetFolder: upack-staging/lib

      - task: CopyFiles@2
        displayName: 'Copy CesiumGltfWriter lib to upack staging directory'
        inputs:
          SourceFolder: "out/CesiumJsonWriter/Release"
          Contents: "*.lib"
          TargetFolder: upack-staging/lib

      # Uncomment this task for testing without having to publish to upack feed     
      # - task: PublishPipelineArtifact@1
      #   inputs:
      #     targetPath: 'upack-staging'
      #     artifactName: 'cesium-native_x64_win'

      - task: UniversalPackages@0
        inputs:
          command: "publish"
          publishDirectory: "upack-staging"
          feedsToUsePublish: "internal"
          vstsFeedPublish: "upack"
          vstsFeedPackagePublish: "cesium_native_x64_win"
          versionOption: "custom"
          versionPublish: ${{parameters.PackageVersion}}
        env:
          AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
